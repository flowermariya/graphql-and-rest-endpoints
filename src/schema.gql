# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  """Unique Identifier of the User"""
  UserId: String!

  """Phone Number of the User"""
  PhoneNumber: String!

  """Name of the User"""
  Name: String

  """Gender of the User"""
  Gender: String

  """Address of the User"""
  Age: Float

  """Created Date"""
  CreatedAt: DateTime

  """Created Date"""
  UpdatedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Book {
  BookId: String!

  """Title of the book """
  Title: String!

  """Author name of the book """
  AuthorName: String

  """Name of the owner who added this book"""
  Owner: User

  """Price of the book"""
  Price: Int

  """Date of the book published"""
  PublishedOn: DateTime

  """Created Date"""
  CreatedAt: DateTime

  """Created Date"""
  UpdatedAt: DateTime
}

type ConfirmOutput {
  accessToken: String!
  refreshToken: String!
}

type CreateAuthOutput {
  status: Boolean!
  message: String!
}

type Query {
  findAllBooks(paginationAndSorting: PaginationAndSorting): [Book!]!
  findOneBook(BookId: String!): Book!
  findAllUsers: [User!]!
}

input PaginationAndSorting {
  limit: Int = 5
  sort_field: SortColumn = CREATED_AT
  sort_order: SortOrder = DESC
}

"""Columns by which results can be ordered."""
enum SortColumn {
  PRICE
  CREATED_AT
  PUBLISHED_ON
}

"""Sorting order for results."""
enum SortOrder {
  ASC
  DESC
}

type Mutation {
  createBook(createBookInput: CreateBookInput!): Book!
  updateBook(BookId: String!, updateBookInput: UpdateBookInput!): Book!
  removeBook(BookId: String!): Book!
  loginByOtp(loginBySendOTP: LoginBySendOTP!): CreateAuthOutput!
  confirmOTP(confirmInput: ConfirmInput!): ConfirmOutput!
  updateUser(userId: String!, updateUserInput: UpdateUserInput!): User!
}

input CreateBookInput {
  """Title of the book """
  Title: String!

  """Author of the book """
  AuthorName: String

  """Price of the book"""
  Price: Int

  """Date of the book published"""
  PublishedOn: DateTime
}

input UpdateBookInput {
  """Title of the book """
  Title: String

  """Author of the book """
  AuthorName: String

  """Price of the book"""
  Price: Int

  """Date of the book published"""
  PublishedOn: DateTime
}

input LoginBySendOTP {
  """Phone number of the user needs to logged in"""
  PhoneNumber: String!
}

input ConfirmInput {
  """Phone number of the user needs to logged in"""
  PhoneNumber: String!
  Otp: String!
}

input UpdateUserInput {
  """Phone Number of the User"""
  PhoneNumber: String

  """Name of the User"""
  Name: String

  """Gender of the User"""
  Gender: UserGender

  """Address of the User"""
  Age: Float
}

"""UserGender"""
enum UserGender {
  MALE
  FEMALE
  OTHER
}